generator client {
  provider = "prisma-client-js"
  // output = "./migrations/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int              @id @default(autoincrement())
  name             String?
  email            String           @unique
  image            String?
  createdAt        DateTime?        @default(now())
  updatedAt        DateTime?        @updatedAt
  subscriptionType SubscriptionType @default(hobby)

  statusPages StatusPage[]
  monitors    Monitor[]
}

model StatusPage {
  id          Int     @id @default(autoincrement())
  userId      Int
  title       String?
  description String? @db.VarChar(1024)

  subdomain    String?   @unique
  customDomain String?   @unique
  published    Boolean   @default(true)
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([subdomain, customDomain])
  @@index([subdomain], name: "statusPage_subdomain_idx")
  @@index([customDomain], name: "statusPage_custom_domain_idx")
}

model Monitor {
  id               Int                @id @default(autoincrement())
  userId           Int
  showMonitorStats Boolean            @default(true)
  active           Boolean            @default(true)
  url              String?            @db.VarChar(1024)
  method           MonitorMethodsEnum @default(GET)
  public           Boolean            @default(true)
  ttl              Int                @default(5000)
  createdAt        DateTime?          @default(now())
  updatedAt        DateTime?          @updatedAt
  discordWebhook   String?
  slackWebhook     String?
  emailNotification     String?
    emailNotificationOn   Boolean  @default(false)
  discordNotificationOn Boolean  @default(false)
  slackNotificationOn   Boolean  @default(false)

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}



enum MonitorMethodsEnum {
  GET
  POST
}

enum SubscriptionType {
  hobby
  pro
}
